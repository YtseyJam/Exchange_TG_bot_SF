import telebot
from telebot import types
from config import keys, TOKEN
from utils import ConvertionExeption, CryptoConverter, RoubleCourse


bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=["start", ])
def start(message: telebot.types.Message):
    text = "üëã –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º: \n*<–∏–º—è –≤–∞–ª—é—Ç—ã>* \
*<–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>* \
*<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã>*\n–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: _/values_\n–ö—É—Ä—Å –≤–∞–ª—é—Ç –∫ —Ä—É–±–ª—é ‚ÇΩ: _/buttons_"
    bot.reply_to(message, text, parse_mode='Markdown')

@bot.message_handler(commands=['help'])
def help(message: telebot.types.Message):
    text = "–ë–æ—Ç –ø—Ä–∏–∑–≤–∞–Ω –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—ã –≤–∞–ª—é—Ç. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n*<–∏–º—è –≤–∞–ª—é—Ç—ã>* \
*<–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>* \
*<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã>*\n\n–ü—Ä–∏–º–µ—Ä: _<–¥–æ–ª–ª–∞—Ä —Ä—É–±–ª—å 1.5>_\n\n–£–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values\n\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ /buttons, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫—É—Ä—Å –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∞–ª—é—Ç –∫ —Ä—É–±–ª—é ‚ÇΩ"
    bot.reply_to(message, text, parse_mode='Markdown')


@bot.message_handler(commands=["values"])
def values(message: telebot.types.Message):
    text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: "
    for key in keys.keys():
        text = "\n".join((text, key, ))
    bot.reply_to(message, text)

@bot.message_handler(commands=['buttons'])
def buttons(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ö—É—Ä—Å —Ä—É–±–ª—è ü§ë")
    markup.add(btn1)
    text = "–ö—É—Ä—Å —Ä—É–±–ª—è ü§ë"
    bot.send_message(message.chat.id, text, reply_markup=markup)


@bot.message_handler(content_types=["text", ])
def convert(message: telebot.types.Message):
    if message.text != "–ö—É—Ä—Å —Ä—É–±–ª—è ü§ë":
        try:
            values = message.text.split(" ")

            if len(values) != 3:
                raise ConvertionExeption('‚ÄºÔ∏è–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞!')

            quote, base, amount = values
            total_base = CryptoConverter.convert(quote, base, amount)
        except ConvertionExeption as e:
            bot.reply_to(message, f'‚ÄºÔ∏è–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}')
        except Exception as e:
            bot.reply_to(message, f'‚ÄºÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')
        else:
            text = f'–¶–µ–Ω–∞ *{amount}* _{quote}_ –≤ _{base}_  ‚û°Ô∏è  *{total_base}*'
            bot.send_message(message.chat.id, text, parse_mode='Markdown')
    else:
        usd_rub = RoubleCourse.get_rouble()[0]
        eur_rub = RoubleCourse.get_rouble()[1]
        cny_rub = RoubleCourse.get_rouble()[2]
        text = f'1üíµ –¥–æ–ª–ª–∞—Ä üü∞  {usd_rub}‚ÇΩ\n1üí∂ –µ–≤—Ä–æ üü∞  {eur_rub}‚ÇΩ\n1üíπ –π–µ–Ω–∞üü∞  {cny_rub}‚ÇΩ'

        bot.send_message(message.chat.id, text)



bot.polling()